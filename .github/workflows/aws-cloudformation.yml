name: AWS Cloudformation CI/CD Pipeline

# Only run on pull requests (for code validation and testing)
# and on pushes to development and production (for full deployment)
on:
  pull_request:
    branches:
      - development
      - production
      - testing
  push:
    branches:
      - development
      - production

permissions:
  id-token: write
  contents: read
  issues: write

jobs:
  validate-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-west-2

      # CloudFormation Validate Step
      - name: Validate CloudFormation template
        run: |
          aws cloudformation validate-template \
            --template-body file://template.yaml

      # Run CloudFormation Guard using Guard-Action
      - name: Run CloudFormation Guard
        continue-on-error: true
        uses: grolston/guard-action@main
        with:
          data_directory: './'
          rule_set: "cis-aws-benchmark-level-1"

      # Skip applying changes in pull requests
      - name: Skip Apply in Pull Requests
        if: github.event_name == 'pull_request'
        run: |
          echo "Skipping apply since this is a pull request validation."
          exit 0

  upload-and-trigger:
    needs: validate-and-test
    runs-on: ubuntu-latest
    # Runs only on push events
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-west-2

      # Set environment variable based on branch
      - name: Set environment variable based on branch
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/development" ]]; then
            echo "ENVIRONMENT=development" >> $GITHUB_ENV
            echo "S3_BUCKET=s3://s2s-ts101-cftemplates-development-164953329762/" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/production" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "S3_BUCKET=s3://s2s-ts101-cftemplates-production-164953329762/" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=default" >> $GITHUB_ENV
            echo "S3_BUCKET=s3://s2s-ts101-cftemplates-default-164953329762/" >> $GITHUB_ENV
          fi

      # Pause and wait for manual approval
      - name: Manual Approval before Apply
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.github_TOKEN }}
          approvers: CommittingLearning
          issue-title: "Uploading CloudFormation template in the s2s-ts101-cftemplates-${{ env.ENVIRONMENT }} S3 bucket"
          issue-body: "Please approve or deny the Upload"

      # Apply changes after approval
      - name: Upload CloudFormation Template to S3
        run: |
          aws s3 cp template.yaml ${{ env.S3_BUCKET }}vpc-${{ env.ENVIRONMENT }}-template.yaml

      # Trigger Parent Stack Deployment via Webhooks
      - name: Trigger Parent Stack Deployment
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.TOKEN_PARENT_TRIGGER }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/CommittingLearning/Site2Site-AWS-ParentStack/dispatches \
            -d '{"event_type":"trigger-parent-stack", "client_payload": {"ref": "${{ github.ref }}"}}'