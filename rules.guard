# Rule 1: VPC CIDR Block should be within allowed ranges
rule vpc_cidr_check {
  resources.Type == "AWS::EC2::VPC"
  properties.CidrBlock IN ["10.0.0.0/16", "172.16.0.0/12", "192.168.0.0/16"]
}

# Rule 2: EC2 Instances should not be publicly accessible (no public IP)
rule ec2_no_public_ip {
  resources.Type == "AWS::EC2::Instance"
  properties.NetworkInterfaces[*].AssociatePublicIpAddress == false
}

# Rule 3: EC2 Instances should use an approved instance type
rule ec2_instance_type_check {
  resources.Type == "AWS::EC2::Instance"
  properties.InstanceType IN ["t2.micro", "t3.micro", "t3a.micro"]
}

# Rule 4: Security Groups should not allow unrestricted ingress (0.0.0.0/0)
rule security_group_ingress_restriction {
  resources.Type == "AWS::EC2::SecurityGroupIngress"
  properties.CidrIp != "0.0.0.0/0"
}

# Rule 5: VGW should be associated with a valid VPC
rule vgw_vpc_association_check {
  resources.Type == "AWS::EC2::VPNGateway"
  properties.VpcAttachments[*].VpcId == /vpc-/
}

# Rule 6: EC2 instances should have EBS volumes encrypted
rule ec2_ebs_encryption {
  resources.Type == "AWS::EC2::Instance"
  properties.BlockDeviceMappings[*].Ebs.Encrypted == true
}

# Rule 7: Ensure VPN Gateway (VGW) is created in a specific region
rule vgw_region_check {
  resources.Type == "AWS::EC2::VPNGateway"
  properties.AvailabilityZone IN ["us-west-2a", "us-west-2b", "us-west-2c"]
}